import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import Header from "@/components/Header/header";
import Footer from "@/components/Footer/footer";
import {NextIntlClientProvider} from 'next-intl';
import {notFound} from 'next/navigation';

type Props = {
  children: React.ReactNode;
  params: Promise<{ locale: string }>; // ✅ yangi talab
};

export function generateStaticParams() {
  return [{locale: 'en'}, {locale: 'ru'}, {locale: 'uz'}];
}

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function LocaleLayout({ children, params }: Props) {
  const {locale}  = await params; // ✅ Next.js 15 talab qiladi

  let messages;
  try {
    messages = (await import(`@/i18n/${locale}.json`)).default;
  } catch {
    notFound();
  }
  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}> 
         <NextIntlClientProvider locale={locale} messages={messages} key={locale}>
        <div className="flex flex-col h-screen justify-between">
              <div>
                <Header />
                {children}
              <Footer locale={locale}/>
              </div>
            </div>
            </NextIntlClientProvider>
      </body>
    </html>
  );
}


